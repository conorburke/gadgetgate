"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("./runtime");
/**
 * Query Engine version: latest
 */
const path = require("path");
const debug = runtime_1.debugLib('photon');
class PhotonFetcher {
    constructor(photon, engine, debug = false, hooks) {
        this.photon = photon;
        this.engine = engine;
        this.debug = debug;
        this.hooks = hooks;
    }
    request(document, path = [], rootField, typeName, isList, callsite) {
        return __awaiter(this, void 0, void 0, function* () {
            const query = String(document);
            debug('Request:');
            debug(query);
            if (this.hooks && this.hooks.beforeRequest) {
                this.hooks.beforeRequest({ query, path, rootField, typeName, document });
            }
            try {
                yield this.photon.connect();
                const result = yield this.engine.request(query, typeName);
                debug('Response:');
                debug(result);
                return this.unpack(document, result, path, rootField, isList);
            }
            catch (e) {
                // HACK: This will be removed as soon as the query engine doesn't throw anymore
                if (e.message.includes('Record does not exist') && rootField && rootField.startsWith('findOne')) {
                    return null;
                }
                if (e.message.includes('RecordDoesNotExist') && rootField && rootField.startsWith('findOne')) {
                    return null;
                }
                if (callsite) {
                    const { stack } = runtime_1.printStack({
                        callsite,
                        originalMethod: path.join('.'),
                        onUs: e.isPanic
                    });
                    throw new Error(stack + '\n\n' + e.message);
                }
                else {
                    if (e.isPanic) {
                        throw e;
                    }
                    else {
                        throw new Error(`Error in Photon${path}: \n` + e.stack);
                    }
                }
            }
        });
    }
    unpack(document, data, path, rootField, isList) {
        const getPath = [];
        if (rootField) {
            getPath.push(rootField);
        }
        getPath.push(...path.filter(p => p !== 'select' && p !== 'include'));
        return runtime_1.unpack({ document, path: getPath, data });
    }
}
/**
 * Build tool annotations
 * In order to make `ncc` and `node-file-trace` happy.
**/
path.join(__dirname, 'runtime/query-engine-linux-glibc-libssl1.1.0');
class Photon {
    constructor(options = {}) {
        const useDebug = options.debug === true ? true : typeof options.debug === 'object' ? Boolean(options.debug.library) : false;
        if (useDebug) {
            runtime_1.debugLib.enable('photon');
        }
        const debugEngine = options.debug === true ? true : typeof options.debug === 'object' ? Boolean(options.debug.engine) : false;
        // datamodel = datamodel without datasources + printed datasources
        const predefinedDatasources = [];
        const inputDatasources = Object.entries(options.datasources || {}).map(([name, url]) => ({ name, url: url }));
        const datasources = runtime_1.mergeBy(predefinedDatasources, inputDatasources, (source) => source.name);
        const internal = options.__internal || {};
        const engineConfig = internal.engine || {};
        this.engine = new runtime_1.Engine({
            cwd: engineConfig.cwd || path.resolve(__dirname, ""),
            debug: debugEngine,
            datamodelPath: path.resolve(__dirname, 'schema.prisma'),
            prismaPath: engineConfig.binaryPath || undefined,
            datasources,
            generator: { "name": "photon", "provider": "photonjs", "output": "/api/prisma", "binaryTargets": ["native", "linux-glibc-libssl1.1.0"], "config": {} },
        });
        this.dmmf = new runtime_1.DMMFClass(exports.dmmf);
        this.fetcher = new PhotonFetcher(this, this.engine, false, internal.hooks);
    }
    connectEngine(publicCall) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.engine.start();
        });
    }
    connect() {
        if (this.connectionPromise) {
            return this.connectionPromise;
        }
        this.connectionPromise = this.connectEngine(true);
        return this.connectionPromise;
    }
    disconnect() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.engine.stop();
        });
    }
    // won't be generated for now
    // private _query?: QueryDelegate
    // get query(): QueryDelegate {
    //   return this._query ? this._query: (this._query = QueryDelegate(this.dmmf, this.fetcher))
    // }
    get users() {
        return UserDelegate(this.dmmf, this.fetcher);
    }
    get emails() {
        return EmailDelegate(this.dmmf, this.fetcher);
    }
    get phones() {
        return PhoneDelegate(this.dmmf, this.fetcher);
    }
    get ratings() {
        return RatingDelegate(this.dmmf, this.fetcher);
    }
    get depots() {
        return DepotDelegate(this.dmmf, this.fetcher);
    }
    get tools() {
        return ToolDelegate(this.dmmf, this.fetcher);
    }
    get toolPictures() {
        return ToolPictureDelegate(this.dmmf, this.fetcher);
    }
    get rentedTools() {
        return RentedToolDelegate(this.dmmf, this.fetcher);
    }
}
exports.Photon = Photon;
/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }
exports.OrderByArg = makeEnum({
    asc: 'asc',
    desc: 'desc'
});
exports.RatingType = makeEnum({
    Loaner: 'Loaner',
    Renter: 'Renter'
});
function UserDelegate(dmmf, fetcher) {
    const User = (args) => new UserClient(dmmf, fetcher, 'query', 'findManyUser', 'users', args, []);
    User.findOne = (args) => args.select ? new UserClient(dmmf, fetcher, 'query', 'findOneUser', 'users.findOne', args, []) : new UserClient(dmmf, fetcher, 'query', 'findOneUser', 'users.findOne', args, []);
    User.findMany = (args) => new UserClient(dmmf, fetcher, 'query', 'findManyUser', 'users.findMany', args, []);
    User.create = (args) => args.select ? new UserClient(dmmf, fetcher, 'mutation', 'createOneUser', 'users.create', args, []) : new UserClient(dmmf, fetcher, 'mutation', 'createOneUser', 'users.create', args, []);
    User.delete = (args) => args.select ? new UserClient(dmmf, fetcher, 'mutation', 'deleteOneUser', 'users.delete', args, []) : new UserClient(dmmf, fetcher, 'mutation', 'deleteOneUser', 'users.delete', args, []);
    User.update = (args) => args.select ? new UserClient(dmmf, fetcher, 'mutation', 'updateOneUser', 'users.update', args, []) : new UserClient(dmmf, fetcher, 'mutation', 'updateOneUser', 'users.update', args, []);
    User.deleteMany = (args) => new UserClient(dmmf, fetcher, 'mutation', 'deleteManyUser', 'users.deleteMany', args, []);
    User.updateMany = (args) => new UserClient(dmmf, fetcher, 'mutation', 'updateManyUser', 'users.updateMany', args, []);
    User.upsert = (args) => args.select ? new UserClient(dmmf, fetcher, 'mutation', 'upsertOneUser', 'users.upsert', args, []) : new UserClient(dmmf, fetcher, 'mutation', 'upsertOneUser', 'users.upsert', args, []);
    User.count = () => new UserClient(dmmf, fetcher, 'query', 'aggregateUser', 'users.count', {}, ['count']);
    return User; // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}
class UserClient {
    constructor(_dmmf, _fetcher, _queryType, _rootField, _clientMethod, _args, _path, _isList = false) {
        this._dmmf = _dmmf;
        this._fetcher = _fetcher;
        this._queryType = _queryType;
        this._rootField = _rootField;
        this._clientMethod = _clientMethod;
        this._args = _args;
        this._path = _path;
        this._isList = _isList;
        // @ts-ignore
        if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
            const error = new Error();
            if (error && error.stack) {
                const stack = error.stack;
                this._callsite = stack;
            }
        }
    }
    emails(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'emails'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = true;
        return new EmailClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    phones(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'phones'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = true;
        return new PhoneClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    depots(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'depots'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = true;
        return new DepotClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    ratings(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'ratings'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = true;
        return new RatingClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    rentedTools(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'rentedTools'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = true;
        return new RentedToolClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    get _document() {
        const { _rootField: rootField } = this;
        const document = runtime_1.makeDocument({
            dmmf: this._dmmf,
            rootField,
            rootTypeName: this._queryType,
            select: this._args
        });
        try {
            document.validate(this._args, false, this._clientMethod);
        }
        catch (e) {
            const x = e;
            if (x.render) {
                if (this._callsite) {
                    e.message = x.render(this._callsite);
                }
            }
            throw e;
        }
        return runtime_1.transformDocument(document);
    }
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then(onfulfilled, onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'User', this._isList, this._callsite);
        }
        return this._requestPromise.then(onfulfilled, onrejected);
    }
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch(onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'User', this._isList, this._callsite);
        }
        return this._requestPromise.catch(onrejected);
    }
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'User', this._isList, this._callsite);
        }
        return this._requestPromise.finally(onfinally);
    }
}
exports.UserClient = UserClient;
function EmailDelegate(dmmf, fetcher) {
    const Email = (args) => new EmailClient(dmmf, fetcher, 'query', 'findManyEmail', 'emails', args, []);
    Email.findOne = (args) => args.select ? new EmailClient(dmmf, fetcher, 'query', 'findOneEmail', 'emails.findOne', args, []) : new EmailClient(dmmf, fetcher, 'query', 'findOneEmail', 'emails.findOne', args, []);
    Email.findMany = (args) => new EmailClient(dmmf, fetcher, 'query', 'findManyEmail', 'emails.findMany', args, []);
    Email.create = (args) => args.select ? new EmailClient(dmmf, fetcher, 'mutation', 'createOneEmail', 'emails.create', args, []) : new EmailClient(dmmf, fetcher, 'mutation', 'createOneEmail', 'emails.create', args, []);
    Email.delete = (args) => args.select ? new EmailClient(dmmf, fetcher, 'mutation', 'deleteOneEmail', 'emails.delete', args, []) : new EmailClient(dmmf, fetcher, 'mutation', 'deleteOneEmail', 'emails.delete', args, []);
    Email.update = (args) => args.select ? new EmailClient(dmmf, fetcher, 'mutation', 'updateOneEmail', 'emails.update', args, []) : new EmailClient(dmmf, fetcher, 'mutation', 'updateOneEmail', 'emails.update', args, []);
    Email.deleteMany = (args) => new EmailClient(dmmf, fetcher, 'mutation', 'deleteManyEmail', 'emails.deleteMany', args, []);
    Email.updateMany = (args) => new EmailClient(dmmf, fetcher, 'mutation', 'updateManyEmail', 'emails.updateMany', args, []);
    Email.upsert = (args) => args.select ? new EmailClient(dmmf, fetcher, 'mutation', 'upsertOneEmail', 'emails.upsert', args, []) : new EmailClient(dmmf, fetcher, 'mutation', 'upsertOneEmail', 'emails.upsert', args, []);
    Email.count = () => new EmailClient(dmmf, fetcher, 'query', 'aggregateEmail', 'emails.count', {}, ['count']);
    return Email; // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}
class EmailClient {
    constructor(_dmmf, _fetcher, _queryType, _rootField, _clientMethod, _args, _path, _isList = false) {
        this._dmmf = _dmmf;
        this._fetcher = _fetcher;
        this._queryType = _queryType;
        this._rootField = _rootField;
        this._clientMethod = _clientMethod;
        this._args = _args;
        this._path = _path;
        this._isList = _isList;
        // @ts-ignore
        if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
            const error = new Error();
            if (error && error.stack) {
                const stack = error.stack;
                this._callsite = stack;
            }
        }
    }
    owner(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'owner'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = false;
        return new UserClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    get _document() {
        const { _rootField: rootField } = this;
        const document = runtime_1.makeDocument({
            dmmf: this._dmmf,
            rootField,
            rootTypeName: this._queryType,
            select: this._args
        });
        try {
            document.validate(this._args, false, this._clientMethod);
        }
        catch (e) {
            const x = e;
            if (x.render) {
                if (this._callsite) {
                    e.message = x.render(this._callsite);
                }
            }
            throw e;
        }
        return runtime_1.transformDocument(document);
    }
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then(onfulfilled, onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Email', this._isList, this._callsite);
        }
        return this._requestPromise.then(onfulfilled, onrejected);
    }
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch(onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Email', this._isList, this._callsite);
        }
        return this._requestPromise.catch(onrejected);
    }
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Email', this._isList, this._callsite);
        }
        return this._requestPromise.finally(onfinally);
    }
}
exports.EmailClient = EmailClient;
function PhoneDelegate(dmmf, fetcher) {
    const Phone = (args) => new PhoneClient(dmmf, fetcher, 'query', 'findManyPhone', 'phones', args, []);
    Phone.findOne = (args) => args.select ? new PhoneClient(dmmf, fetcher, 'query', 'findOnePhone', 'phones.findOne', args, []) : new PhoneClient(dmmf, fetcher, 'query', 'findOnePhone', 'phones.findOne', args, []);
    Phone.findMany = (args) => new PhoneClient(dmmf, fetcher, 'query', 'findManyPhone', 'phones.findMany', args, []);
    Phone.create = (args) => args.select ? new PhoneClient(dmmf, fetcher, 'mutation', 'createOnePhone', 'phones.create', args, []) : new PhoneClient(dmmf, fetcher, 'mutation', 'createOnePhone', 'phones.create', args, []);
    Phone.delete = (args) => args.select ? new PhoneClient(dmmf, fetcher, 'mutation', 'deleteOnePhone', 'phones.delete', args, []) : new PhoneClient(dmmf, fetcher, 'mutation', 'deleteOnePhone', 'phones.delete', args, []);
    Phone.update = (args) => args.select ? new PhoneClient(dmmf, fetcher, 'mutation', 'updateOnePhone', 'phones.update', args, []) : new PhoneClient(dmmf, fetcher, 'mutation', 'updateOnePhone', 'phones.update', args, []);
    Phone.deleteMany = (args) => new PhoneClient(dmmf, fetcher, 'mutation', 'deleteManyPhone', 'phones.deleteMany', args, []);
    Phone.updateMany = (args) => new PhoneClient(dmmf, fetcher, 'mutation', 'updateManyPhone', 'phones.updateMany', args, []);
    Phone.upsert = (args) => args.select ? new PhoneClient(dmmf, fetcher, 'mutation', 'upsertOnePhone', 'phones.upsert', args, []) : new PhoneClient(dmmf, fetcher, 'mutation', 'upsertOnePhone', 'phones.upsert', args, []);
    Phone.count = () => new PhoneClient(dmmf, fetcher, 'query', 'aggregatePhone', 'phones.count', {}, ['count']);
    return Phone; // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}
class PhoneClient {
    constructor(_dmmf, _fetcher, _queryType, _rootField, _clientMethod, _args, _path, _isList = false) {
        this._dmmf = _dmmf;
        this._fetcher = _fetcher;
        this._queryType = _queryType;
        this._rootField = _rootField;
        this._clientMethod = _clientMethod;
        this._args = _args;
        this._path = _path;
        this._isList = _isList;
        // @ts-ignore
        if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
            const error = new Error();
            if (error && error.stack) {
                const stack = error.stack;
                this._callsite = stack;
            }
        }
    }
    owner(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'owner'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = false;
        return new UserClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    get _document() {
        const { _rootField: rootField } = this;
        const document = runtime_1.makeDocument({
            dmmf: this._dmmf,
            rootField,
            rootTypeName: this._queryType,
            select: this._args
        });
        try {
            document.validate(this._args, false, this._clientMethod);
        }
        catch (e) {
            const x = e;
            if (x.render) {
                if (this._callsite) {
                    e.message = x.render(this._callsite);
                }
            }
            throw e;
        }
        return runtime_1.transformDocument(document);
    }
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then(onfulfilled, onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Phone', this._isList, this._callsite);
        }
        return this._requestPromise.then(onfulfilled, onrejected);
    }
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch(onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Phone', this._isList, this._callsite);
        }
        return this._requestPromise.catch(onrejected);
    }
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Phone', this._isList, this._callsite);
        }
        return this._requestPromise.finally(onfinally);
    }
}
exports.PhoneClient = PhoneClient;
function RatingDelegate(dmmf, fetcher) {
    const Rating = (args) => new RatingClient(dmmf, fetcher, 'query', 'findManyRating', 'ratings', args, []);
    Rating.findOne = (args) => args.select ? new RatingClient(dmmf, fetcher, 'query', 'findOneRating', 'ratings.findOne', args, []) : new RatingClient(dmmf, fetcher, 'query', 'findOneRating', 'ratings.findOne', args, []);
    Rating.findMany = (args) => new RatingClient(dmmf, fetcher, 'query', 'findManyRating', 'ratings.findMany', args, []);
    Rating.create = (args) => args.select ? new RatingClient(dmmf, fetcher, 'mutation', 'createOneRating', 'ratings.create', args, []) : new RatingClient(dmmf, fetcher, 'mutation', 'createOneRating', 'ratings.create', args, []);
    Rating.delete = (args) => args.select ? new RatingClient(dmmf, fetcher, 'mutation', 'deleteOneRating', 'ratings.delete', args, []) : new RatingClient(dmmf, fetcher, 'mutation', 'deleteOneRating', 'ratings.delete', args, []);
    Rating.update = (args) => args.select ? new RatingClient(dmmf, fetcher, 'mutation', 'updateOneRating', 'ratings.update', args, []) : new RatingClient(dmmf, fetcher, 'mutation', 'updateOneRating', 'ratings.update', args, []);
    Rating.deleteMany = (args) => new RatingClient(dmmf, fetcher, 'mutation', 'deleteManyRating', 'ratings.deleteMany', args, []);
    Rating.updateMany = (args) => new RatingClient(dmmf, fetcher, 'mutation', 'updateManyRating', 'ratings.updateMany', args, []);
    Rating.upsert = (args) => args.select ? new RatingClient(dmmf, fetcher, 'mutation', 'upsertOneRating', 'ratings.upsert', args, []) : new RatingClient(dmmf, fetcher, 'mutation', 'upsertOneRating', 'ratings.upsert', args, []);
    Rating.count = () => new RatingClient(dmmf, fetcher, 'query', 'aggregateRating', 'ratings.count', {}, ['count']);
    return Rating; // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}
class RatingClient {
    constructor(_dmmf, _fetcher, _queryType, _rootField, _clientMethod, _args, _path, _isList = false) {
        this._dmmf = _dmmf;
        this._fetcher = _fetcher;
        this._queryType = _queryType;
        this._rootField = _rootField;
        this._clientMethod = _clientMethod;
        this._args = _args;
        this._path = _path;
        this._isList = _isList;
        // @ts-ignore
        if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
            const error = new Error();
            if (error && error.stack) {
                const stack = error.stack;
                this._callsite = stack;
            }
        }
    }
    user(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'user'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = false;
        return new UserClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    get _document() {
        const { _rootField: rootField } = this;
        const document = runtime_1.makeDocument({
            dmmf: this._dmmf,
            rootField,
            rootTypeName: this._queryType,
            select: this._args
        });
        try {
            document.validate(this._args, false, this._clientMethod);
        }
        catch (e) {
            const x = e;
            if (x.render) {
                if (this._callsite) {
                    e.message = x.render(this._callsite);
                }
            }
            throw e;
        }
        return runtime_1.transformDocument(document);
    }
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then(onfulfilled, onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Rating', this._isList, this._callsite);
        }
        return this._requestPromise.then(onfulfilled, onrejected);
    }
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch(onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Rating', this._isList, this._callsite);
        }
        return this._requestPromise.catch(onrejected);
    }
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Rating', this._isList, this._callsite);
        }
        return this._requestPromise.finally(onfinally);
    }
}
exports.RatingClient = RatingClient;
function DepotDelegate(dmmf, fetcher) {
    const Depot = (args) => new DepotClient(dmmf, fetcher, 'query', 'findManyDepot', 'depots', args, []);
    Depot.findOne = (args) => args.select ? new DepotClient(dmmf, fetcher, 'query', 'findOneDepot', 'depots.findOne', args, []) : new DepotClient(dmmf, fetcher, 'query', 'findOneDepot', 'depots.findOne', args, []);
    Depot.findMany = (args) => new DepotClient(dmmf, fetcher, 'query', 'findManyDepot', 'depots.findMany', args, []);
    Depot.create = (args) => args.select ? new DepotClient(dmmf, fetcher, 'mutation', 'createOneDepot', 'depots.create', args, []) : new DepotClient(dmmf, fetcher, 'mutation', 'createOneDepot', 'depots.create', args, []);
    Depot.delete = (args) => args.select ? new DepotClient(dmmf, fetcher, 'mutation', 'deleteOneDepot', 'depots.delete', args, []) : new DepotClient(dmmf, fetcher, 'mutation', 'deleteOneDepot', 'depots.delete', args, []);
    Depot.update = (args) => args.select ? new DepotClient(dmmf, fetcher, 'mutation', 'updateOneDepot', 'depots.update', args, []) : new DepotClient(dmmf, fetcher, 'mutation', 'updateOneDepot', 'depots.update', args, []);
    Depot.deleteMany = (args) => new DepotClient(dmmf, fetcher, 'mutation', 'deleteManyDepot', 'depots.deleteMany', args, []);
    Depot.updateMany = (args) => new DepotClient(dmmf, fetcher, 'mutation', 'updateManyDepot', 'depots.updateMany', args, []);
    Depot.upsert = (args) => args.select ? new DepotClient(dmmf, fetcher, 'mutation', 'upsertOneDepot', 'depots.upsert', args, []) : new DepotClient(dmmf, fetcher, 'mutation', 'upsertOneDepot', 'depots.upsert', args, []);
    Depot.count = () => new DepotClient(dmmf, fetcher, 'query', 'aggregateDepot', 'depots.count', {}, ['count']);
    return Depot; // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}
class DepotClient {
    constructor(_dmmf, _fetcher, _queryType, _rootField, _clientMethod, _args, _path, _isList = false) {
        this._dmmf = _dmmf;
        this._fetcher = _fetcher;
        this._queryType = _queryType;
        this._rootField = _rootField;
        this._clientMethod = _clientMethod;
        this._args = _args;
        this._path = _path;
        this._isList = _isList;
        // @ts-ignore
        if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
            const error = new Error();
            if (error && error.stack) {
                const stack = error.stack;
                this._callsite = stack;
            }
        }
    }
    owner(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'owner'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = false;
        return new UserClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    tools(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'tools'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = true;
        return new ToolClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    get _document() {
        const { _rootField: rootField } = this;
        const document = runtime_1.makeDocument({
            dmmf: this._dmmf,
            rootField,
            rootTypeName: this._queryType,
            select: this._args
        });
        try {
            document.validate(this._args, false, this._clientMethod);
        }
        catch (e) {
            const x = e;
            if (x.render) {
                if (this._callsite) {
                    e.message = x.render(this._callsite);
                }
            }
            throw e;
        }
        return runtime_1.transformDocument(document);
    }
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then(onfulfilled, onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Depot', this._isList, this._callsite);
        }
        return this._requestPromise.then(onfulfilled, onrejected);
    }
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch(onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Depot', this._isList, this._callsite);
        }
        return this._requestPromise.catch(onrejected);
    }
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Depot', this._isList, this._callsite);
        }
        return this._requestPromise.finally(onfinally);
    }
}
exports.DepotClient = DepotClient;
function ToolDelegate(dmmf, fetcher) {
    const Tool = (args) => new ToolClient(dmmf, fetcher, 'query', 'findManyTool', 'tools', args, []);
    Tool.findOne = (args) => args.select ? new ToolClient(dmmf, fetcher, 'query', 'findOneTool', 'tools.findOne', args, []) : new ToolClient(dmmf, fetcher, 'query', 'findOneTool', 'tools.findOne', args, []);
    Tool.findMany = (args) => new ToolClient(dmmf, fetcher, 'query', 'findManyTool', 'tools.findMany', args, []);
    Tool.create = (args) => args.select ? new ToolClient(dmmf, fetcher, 'mutation', 'createOneTool', 'tools.create', args, []) : new ToolClient(dmmf, fetcher, 'mutation', 'createOneTool', 'tools.create', args, []);
    Tool.delete = (args) => args.select ? new ToolClient(dmmf, fetcher, 'mutation', 'deleteOneTool', 'tools.delete', args, []) : new ToolClient(dmmf, fetcher, 'mutation', 'deleteOneTool', 'tools.delete', args, []);
    Tool.update = (args) => args.select ? new ToolClient(dmmf, fetcher, 'mutation', 'updateOneTool', 'tools.update', args, []) : new ToolClient(dmmf, fetcher, 'mutation', 'updateOneTool', 'tools.update', args, []);
    Tool.deleteMany = (args) => new ToolClient(dmmf, fetcher, 'mutation', 'deleteManyTool', 'tools.deleteMany', args, []);
    Tool.updateMany = (args) => new ToolClient(dmmf, fetcher, 'mutation', 'updateManyTool', 'tools.updateMany', args, []);
    Tool.upsert = (args) => args.select ? new ToolClient(dmmf, fetcher, 'mutation', 'upsertOneTool', 'tools.upsert', args, []) : new ToolClient(dmmf, fetcher, 'mutation', 'upsertOneTool', 'tools.upsert', args, []);
    Tool.count = () => new ToolClient(dmmf, fetcher, 'query', 'aggregateTool', 'tools.count', {}, ['count']);
    return Tool; // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}
class ToolClient {
    constructor(_dmmf, _fetcher, _queryType, _rootField, _clientMethod, _args, _path, _isList = false) {
        this._dmmf = _dmmf;
        this._fetcher = _fetcher;
        this._queryType = _queryType;
        this._rootField = _rootField;
        this._clientMethod = _clientMethod;
        this._args = _args;
        this._path = _path;
        this._isList = _isList;
        // @ts-ignore
        if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
            const error = new Error();
            if (error && error.stack) {
                const stack = error.stack;
                this._callsite = stack;
            }
        }
    }
    depot(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'depot'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = false;
        return new DepotClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    pictures(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'pictures'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = true;
        return new ToolPictureClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    rentedTools(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'rentedTools'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = true;
        return new RentedToolClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    get _document() {
        const { _rootField: rootField } = this;
        const document = runtime_1.makeDocument({
            dmmf: this._dmmf,
            rootField,
            rootTypeName: this._queryType,
            select: this._args
        });
        try {
            document.validate(this._args, false, this._clientMethod);
        }
        catch (e) {
            const x = e;
            if (x.render) {
                if (this._callsite) {
                    e.message = x.render(this._callsite);
                }
            }
            throw e;
        }
        return runtime_1.transformDocument(document);
    }
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then(onfulfilled, onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Tool', this._isList, this._callsite);
        }
        return this._requestPromise.then(onfulfilled, onrejected);
    }
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch(onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Tool', this._isList, this._callsite);
        }
        return this._requestPromise.catch(onrejected);
    }
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'Tool', this._isList, this._callsite);
        }
        return this._requestPromise.finally(onfinally);
    }
}
exports.ToolClient = ToolClient;
function ToolPictureDelegate(dmmf, fetcher) {
    const ToolPicture = (args) => new ToolPictureClient(dmmf, fetcher, 'query', 'findManyToolPicture', 'toolPictures', args, []);
    ToolPicture.findOne = (args) => args.select ? new ToolPictureClient(dmmf, fetcher, 'query', 'findOneToolPicture', 'toolPictures.findOne', args, []) : new ToolPictureClient(dmmf, fetcher, 'query', 'findOneToolPicture', 'toolPictures.findOne', args, []);
    ToolPicture.findMany = (args) => new ToolPictureClient(dmmf, fetcher, 'query', 'findManyToolPicture', 'toolPictures.findMany', args, []);
    ToolPicture.create = (args) => args.select ? new ToolPictureClient(dmmf, fetcher, 'mutation', 'createOneToolPicture', 'toolPictures.create', args, []) : new ToolPictureClient(dmmf, fetcher, 'mutation', 'createOneToolPicture', 'toolPictures.create', args, []);
    ToolPicture.delete = (args) => args.select ? new ToolPictureClient(dmmf, fetcher, 'mutation', 'deleteOneToolPicture', 'toolPictures.delete', args, []) : new ToolPictureClient(dmmf, fetcher, 'mutation', 'deleteOneToolPicture', 'toolPictures.delete', args, []);
    ToolPicture.update = (args) => args.select ? new ToolPictureClient(dmmf, fetcher, 'mutation', 'updateOneToolPicture', 'toolPictures.update', args, []) : new ToolPictureClient(dmmf, fetcher, 'mutation', 'updateOneToolPicture', 'toolPictures.update', args, []);
    ToolPicture.deleteMany = (args) => new ToolPictureClient(dmmf, fetcher, 'mutation', 'deleteManyToolPicture', 'toolPictures.deleteMany', args, []);
    ToolPicture.updateMany = (args) => new ToolPictureClient(dmmf, fetcher, 'mutation', 'updateManyToolPicture', 'toolPictures.updateMany', args, []);
    ToolPicture.upsert = (args) => args.select ? new ToolPictureClient(dmmf, fetcher, 'mutation', 'upsertOneToolPicture', 'toolPictures.upsert', args, []) : new ToolPictureClient(dmmf, fetcher, 'mutation', 'upsertOneToolPicture', 'toolPictures.upsert', args, []);
    ToolPicture.count = () => new ToolPictureClient(dmmf, fetcher, 'query', 'aggregateToolPicture', 'toolPictures.count', {}, ['count']);
    return ToolPicture; // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}
class ToolPictureClient {
    constructor(_dmmf, _fetcher, _queryType, _rootField, _clientMethod, _args, _path, _isList = false) {
        this._dmmf = _dmmf;
        this._fetcher = _fetcher;
        this._queryType = _queryType;
        this._rootField = _rootField;
        this._clientMethod = _clientMethod;
        this._args = _args;
        this._path = _path;
        this._isList = _isList;
        // @ts-ignore
        if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
            const error = new Error();
            if (error && error.stack) {
                const stack = error.stack;
                this._callsite = stack;
            }
        }
    }
    tool(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'tool'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = false;
        return new ToolClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    get _document() {
        const { _rootField: rootField } = this;
        const document = runtime_1.makeDocument({
            dmmf: this._dmmf,
            rootField,
            rootTypeName: this._queryType,
            select: this._args
        });
        try {
            document.validate(this._args, false, this._clientMethod);
        }
        catch (e) {
            const x = e;
            if (x.render) {
                if (this._callsite) {
                    e.message = x.render(this._callsite);
                }
            }
            throw e;
        }
        return runtime_1.transformDocument(document);
    }
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then(onfulfilled, onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'ToolPicture', this._isList, this._callsite);
        }
        return this._requestPromise.then(onfulfilled, onrejected);
    }
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch(onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'ToolPicture', this._isList, this._callsite);
        }
        return this._requestPromise.catch(onrejected);
    }
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'ToolPicture', this._isList, this._callsite);
        }
        return this._requestPromise.finally(onfinally);
    }
}
exports.ToolPictureClient = ToolPictureClient;
function RentedToolDelegate(dmmf, fetcher) {
    const RentedTool = (args) => new RentedToolClient(dmmf, fetcher, 'query', 'findManyRentedTool', 'rentedTools', args, []);
    RentedTool.findOne = (args) => args.select ? new RentedToolClient(dmmf, fetcher, 'query', 'findOneRentedTool', 'rentedTools.findOne', args, []) : new RentedToolClient(dmmf, fetcher, 'query', 'findOneRentedTool', 'rentedTools.findOne', args, []);
    RentedTool.findMany = (args) => new RentedToolClient(dmmf, fetcher, 'query', 'findManyRentedTool', 'rentedTools.findMany', args, []);
    RentedTool.create = (args) => args.select ? new RentedToolClient(dmmf, fetcher, 'mutation', 'createOneRentedTool', 'rentedTools.create', args, []) : new RentedToolClient(dmmf, fetcher, 'mutation', 'createOneRentedTool', 'rentedTools.create', args, []);
    RentedTool.delete = (args) => args.select ? new RentedToolClient(dmmf, fetcher, 'mutation', 'deleteOneRentedTool', 'rentedTools.delete', args, []) : new RentedToolClient(dmmf, fetcher, 'mutation', 'deleteOneRentedTool', 'rentedTools.delete', args, []);
    RentedTool.update = (args) => args.select ? new RentedToolClient(dmmf, fetcher, 'mutation', 'updateOneRentedTool', 'rentedTools.update', args, []) : new RentedToolClient(dmmf, fetcher, 'mutation', 'updateOneRentedTool', 'rentedTools.update', args, []);
    RentedTool.deleteMany = (args) => new RentedToolClient(dmmf, fetcher, 'mutation', 'deleteManyRentedTool', 'rentedTools.deleteMany', args, []);
    RentedTool.updateMany = (args) => new RentedToolClient(dmmf, fetcher, 'mutation', 'updateManyRentedTool', 'rentedTools.updateMany', args, []);
    RentedTool.upsert = (args) => args.select ? new RentedToolClient(dmmf, fetcher, 'mutation', 'upsertOneRentedTool', 'rentedTools.upsert', args, []) : new RentedToolClient(dmmf, fetcher, 'mutation', 'upsertOneRentedTool', 'rentedTools.upsert', args, []);
    RentedTool.count = () => new RentedToolClient(dmmf, fetcher, 'query', 'aggregateRentedTool', 'rentedTools.count', {}, ['count']);
    return RentedTool; // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}
class RentedToolClient {
    constructor(_dmmf, _fetcher, _queryType, _rootField, _clientMethod, _args, _path, _isList = false) {
        this._dmmf = _dmmf;
        this._fetcher = _fetcher;
        this._queryType = _queryType;
        this._rootField = _rootField;
        this._clientMethod = _clientMethod;
        this._args = _args;
        this._path = _path;
        this._isList = _isList;
        // @ts-ignore
        if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
            const error = new Error();
            if (error && error.stack) {
                const stack = error.stack;
                this._callsite = stack;
            }
        }
    }
    tool(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'tool'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = false;
        return new ToolClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    renter(args) {
        const prefix = this._path.includes('select') ? 'select' : this._path.includes('include') ? 'include' : 'select';
        const path = [...this._path, prefix, 'renter'];
        const newArgs = runtime_1.deepSet(this._args, path, args || true);
        this._isList = false;
        return new UserClient(this._dmmf, this._fetcher, this._queryType, this._rootField, this._clientMethod, newArgs, path, this._isList);
    }
    get _document() {
        const { _rootField: rootField } = this;
        const document = runtime_1.makeDocument({
            dmmf: this._dmmf,
            rootField,
            rootTypeName: this._queryType,
            select: this._args
        });
        try {
            document.validate(this._args, false, this._clientMethod);
        }
        catch (e) {
            const x = e;
            if (x.render) {
                if (this._callsite) {
                    e.message = x.render(this._callsite);
                }
            }
            throw e;
        }
        return runtime_1.transformDocument(document);
    }
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then(onfulfilled, onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'RentedTool', this._isList, this._callsite);
        }
        return this._requestPromise.then(onfulfilled, onrejected);
    }
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch(onrejected) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'RentedTool', this._isList, this._callsite);
        }
        return this._requestPromise.catch(onrejected);
    }
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally) {
        if (!this._requestPromise) {
            this._requestPromise = this._fetcher.request(this._document, this._path, this._rootField, 'RentedTool', this._isList, this._callsite);
        }
        return this._requestPromise.finally(onfinally);
    }
}
exports.RentedToolClient = RentedToolClient;
/**
 * DMMF
 */
exports.dmmf = { "datamodel": { "enums": [{ "name": "RatingType", "values": ["Loaner", "Renter"], "dbName": null }], "models": [{ "name": "User", "isEmbedded": false, "dbName": null, "fields": [{ "name": "id", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": true, "type": "String", "default": { "name": "cuid", "returnType": "String", "args": [] }, "isGenerated": false, "isUpdatedAt": false }, { "name": "password_hash", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "email", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": true, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "first_name", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "last_name", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "birth_date", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "DateTime", "isGenerated": false, "isUpdatedAt": false }, { "name": "emails", "kind": "object", "dbName": null, "isList": true, "isRequired": false, "isUnique": false, "isId": false, "type": "Email", "relationName": "EmailToUser", "relationToFields": [], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }, { "name": "phones", "kind": "object", "dbName": null, "isList": true, "isRequired": false, "isUnique": false, "isId": false, "type": "Phone", "relationName": "PhoneToUser", "relationToFields": [], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }, { "name": "depots", "kind": "object", "dbName": null, "isList": true, "isRequired": false, "isUnique": false, "isId": false, "type": "Depot", "relationName": "DepotToUser", "relationToFields": [], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }, { "name": "ratings", "kind": "object", "dbName": null, "isList": true, "isRequired": false, "isUnique": false, "isId": false, "type": "Rating", "relationName": "RatingToUser", "relationToFields": [], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }, { "name": "rentedTools", "kind": "object", "dbName": null, "isList": true, "isRequired": false, "isUnique": false, "isId": false, "type": "RentedTool", "relationName": "RentedToolToUser", "relationToFields": [], "relationOnDelete": "NONE", "isGenerated": true, "isUpdatedAt": false }], "isGenerated": false, "idFields": [] }, { "name": "Email", "isEmbedded": false, "dbName": null, "fields": [{ "name": "id", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": true, "type": "String", "default": { "name": "cuid", "returnType": "String", "args": [] }, "isGenerated": false, "isUpdatedAt": false }, { "name": "address", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "purpose", "kind": "scalar", "dbName": null, "isList": false, "isRequired": false, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "owner", "kind": "object", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "User", "relationName": "EmailToUser", "relationToFields": ["id"], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }], "isGenerated": false, "idFields": [] }, { "name": "Phone", "isEmbedded": false, "dbName": null, "fields": [{ "name": "id", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": true, "type": "String", "default": { "name": "cuid", "returnType": "String", "args": [] }, "isGenerated": false, "isUpdatedAt": false }, { "name": "num", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "purpose", "kind": "scalar", "dbName": null, "isList": false, "isRequired": false, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "owner", "kind": "object", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "User", "relationName": "PhoneToUser", "relationToFields": ["id"], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }], "isGenerated": false, "idFields": [] }, { "name": "Rating", "isEmbedded": false, "dbName": null, "fields": [{ "name": "id", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": true, "type": "String", "default": { "name": "cuid", "returnType": "String", "args": [] }, "isGenerated": false, "isUpdatedAt": false }, { "name": "point", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "Int", "isGenerated": false, "isUpdatedAt": false }, { "name": "type", "kind": "enum", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "RatingType", "isGenerated": false, "isUpdatedAt": false }, { "name": "comment", "kind": "scalar", "dbName": null, "isList": false, "isRequired": false, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "user", "kind": "object", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "User", "relationName": "RatingToUser", "relationToFields": ["id"], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }], "isGenerated": false, "idFields": [] }, { "name": "Depot", "isEmbedded": false, "dbName": null, "fields": [{ "name": "id", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": true, "type": "String", "default": { "name": "cuid", "returnType": "String", "args": [] }, "isGenerated": false, "isUpdatedAt": false }, { "name": "address_1", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "address_2", "kind": "scalar", "dbName": null, "isList": false, "isRequired": false, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "city", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "state", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "zipcode", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "owner", "kind": "object", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "User", "relationName": "DepotToUser", "relationToFields": ["id"], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }, { "name": "tools", "kind": "object", "dbName": null, "isList": true, "isRequired": false, "isUnique": false, "isId": false, "type": "Tool", "relationName": "DepotToTool", "relationToFields": [], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }], "isGenerated": false, "idFields": [] }, { "name": "Tool", "isEmbedded": false, "dbName": null, "fields": [{ "name": "id", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": true, "type": "String", "default": { "name": "cuid", "returnType": "String", "args": [] }, "isGenerated": false, "isUpdatedAt": false }, { "name": "title", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "category", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "description", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "price", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "Float", "isGenerated": false, "isUpdatedAt": false }, { "name": "depot", "kind": "object", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "Depot", "relationName": "DepotToTool", "relationToFields": ["id"], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }, { "name": "pictures", "kind": "object", "dbName": null, "isList": true, "isRequired": false, "isUnique": false, "isId": false, "type": "ToolPicture", "relationName": "ToolToToolPicture", "relationToFields": [], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }, { "name": "rentedTools", "kind": "object", "dbName": null, "isList": true, "isRequired": false, "isUnique": false, "isId": false, "type": "RentedTool", "relationName": "RentedToolToTool", "relationToFields": [], "relationOnDelete": "NONE", "isGenerated": true, "isUpdatedAt": false }], "isGenerated": false, "idFields": [] }, { "name": "ToolPicture", "isEmbedded": false, "dbName": null, "fields": [{ "name": "id", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": true, "type": "String", "default": { "name": "cuid", "returnType": "String", "args": [] }, "isGenerated": false, "isUpdatedAt": false }, { "name": "image", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "description", "kind": "scalar", "dbName": null, "isList": false, "isRequired": false, "isUnique": false, "isId": false, "type": "String", "isGenerated": false, "isUpdatedAt": false }, { "name": "tool", "kind": "object", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "Tool", "relationName": "ToolToToolPicture", "relationToFields": ["id"], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }], "isGenerated": false, "idFields": [] }, { "name": "RentedTool", "isEmbedded": false, "dbName": null, "fields": [{ "name": "id", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": true, "type": "String", "default": { "name": "cuid", "returnType": "String", "args": [] }, "isGenerated": false, "isUpdatedAt": false }, { "name": "tool", "kind": "object", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "Tool", "relationName": "RentedToolToTool", "relationToFields": ["id"], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }, { "name": "renter", "kind": "object", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "User", "relationName": "RentedToolToUser", "relationToFields": ["id"], "relationOnDelete": "NONE", "isGenerated": false, "isUpdatedAt": false }, { "name": "start_date", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "DateTime", "isGenerated": false, "isUpdatedAt": false }, { "name": "end_date", "kind": "scalar", "dbName": null, "isList": false, "isRequired": true, "isUnique": false, "isId": false, "type": "DateTime", "isGenerated": false, "isUpdatedAt": false }], "isGenerated": false, "idFields": [] }] }, "mappings": [{ "model": "User", "plural": "users", "findOne": "findOneUser", "findMany": "findManyUser", "create": "createOneUser", "delete": "deleteOneUser", "update": "updateOneUser", "deleteMany": "deleteManyUser", "updateMany": "updateManyUser", "upsert": "upsertOneUser", "aggregate": "aggregateUser" }, { "model": "Email", "plural": "emails", "findOne": "findOneEmail", "findMany": "findManyEmail", "create": "createOneEmail", "delete": "deleteOneEmail", "update": "updateOneEmail", "deleteMany": "deleteManyEmail", "updateMany": "updateManyEmail", "upsert": "upsertOneEmail", "aggregate": "aggregateEmail" }, { "model": "Phone", "plural": "phones", "findOne": "findOnePhone", "findMany": "findManyPhone", "create": "createOnePhone", "delete": "deleteOnePhone", "update": "updateOnePhone", "deleteMany": "deleteManyPhone", "updateMany": "updateManyPhone", "upsert": "upsertOnePhone", "aggregate": "aggregatePhone" }, { "model": "Rating", "plural": "ratings", "findOne": "findOneRating", "findMany": "findManyRating", "create": "createOneRating", "delete": "deleteOneRating", "update": "updateOneRating", "deleteMany": "deleteManyRating", "updateMany": "updateManyRating", "upsert": "upsertOneRating", "aggregate": "aggregateRating" }, { "model": "Depot", "plural": "depots", "findOne": "findOneDepot", "findMany": "findManyDepot", "create": "createOneDepot", "delete": "deleteOneDepot", "update": "updateOneDepot", "deleteMany": "deleteManyDepot", "updateMany": "updateManyDepot", "upsert": "upsertOneDepot", "aggregate": "aggregateDepot" }, { "model": "Tool", "plural": "tools", "findOne": "findOneTool", "findMany": "findManyTool", "create": "createOneTool", "delete": "deleteOneTool", "update": "updateOneTool", "deleteMany": "deleteManyTool", "updateMany": "updateManyTool", "upsert": "upsertOneTool", "aggregate": "aggregateTool" }, { "model": "ToolPicture", "plural": "toolPictures", "findOne": "findOneToolPicture", "findMany": "findManyToolPicture", "create": "createOneToolPicture", "delete": "deleteOneToolPicture", "update": "updateOneToolPicture", "deleteMany": "deleteManyToolPicture", "updateMany": "updateManyToolPicture", "upsert": "upsertOneToolPicture", "aggregate": "aggregateToolPicture" }, { "model": "RentedTool", "plural": "rentedTools", "findOne": "findOneRentedTool", "findMany": "findManyRentedTool", "create": "createOneRentedTool", "delete": "deleteOneRentedTool", "update": "updateOneRentedTool", "deleteMany": "deleteManyRentedTool", "updateMany": "updateManyRentedTool", "upsert": "upsertOneRentedTool", "aggregate": "aggregateRentedTool" }], "schema": { "enums": [{ "name": "OrderByArg", "values": ["asc", "desc"] }, { "name": "RatingType", "values": ["Loaner", "Renter"] }], "outputTypes": [{ "name": "Email", "fields": [{ "name": "id", "args": [], "outputType": { "type": "ID", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "address", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "purpose", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": false, "isList": false } }, { "name": "owner", "args": [], "outputType": { "type": "User", "kind": "object", "isRequired": true, "isList": false } }] }, { "name": "Phone", "fields": [{ "name": "id", "args": [], "outputType": { "type": "ID", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "num", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "purpose", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": false, "isList": false } }, { "name": "owner", "args": [], "outputType": { "type": "User", "kind": "object", "isRequired": true, "isList": false } }] }, { "name": "ToolPicture", "fields": [{ "name": "id", "args": [], "outputType": { "type": "ID", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "image", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "description", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": false, "isList": false } }, { "name": "tool", "args": [], "outputType": { "type": "Tool", "kind": "object", "isRequired": true, "isList": false } }] }, { "name": "RentedTool", "fields": [{ "name": "id", "args": [], "outputType": { "type": "ID", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "tool", "args": [], "outputType": { "type": "Tool", "kind": "object", "isRequired": true, "isList": false } }, { "name": "renter", "args": [], "outputType": { "type": "User", "kind": "object", "isRequired": true, "isList": false } }, { "name": "start_date", "args": [], "outputType": { "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "end_date", "args": [], "outputType": { "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "Tool", "fields": [{ "name": "id", "args": [], "outputType": { "type": "ID", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "title", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "category", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "description", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "price", "args": [], "outputType": { "type": "Float", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "depot", "args": [], "outputType": { "type": "Depot", "kind": "object", "isRequired": true, "isList": false } }, { "name": "pictures", "args": [{ "name": "where", "inputType": [{ "type": "ToolPictureWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "ToolPictureOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "ToolPicture", "kind": "object", "isRequired": false, "isList": true } }, { "name": "rentedTools", "args": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "RentedToolOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "RentedTool", "kind": "object", "isRequired": false, "isList": true } }] }, { "name": "Depot", "fields": [{ "name": "id", "args": [], "outputType": { "type": "ID", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "address_1", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "address_2", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": false, "isList": false } }, { "name": "city", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "state", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "zipcode", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "owner", "args": [], "outputType": { "type": "User", "kind": "object", "isRequired": true, "isList": false } }, { "name": "tools", "args": [{ "name": "where", "inputType": [{ "type": "ToolWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "ToolOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Tool", "kind": "object", "isRequired": false, "isList": true } }] }, { "name": "Rating", "fields": [{ "name": "id", "args": [], "outputType": { "type": "ID", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "point", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "type", "args": [], "outputType": { "type": "RatingType", "kind": "enum", "isRequired": true, "isList": false } }, { "name": "comment", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": false, "isList": false } }, { "name": "user", "args": [], "outputType": { "type": "User", "kind": "object", "isRequired": true, "isList": false } }] }, { "name": "User", "fields": [{ "name": "id", "args": [], "outputType": { "type": "ID", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "password_hash", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "email", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "first_name", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "last_name", "args": [], "outputType": { "type": "String", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "birth_date", "args": [], "outputType": { "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false } }, { "name": "emails", "args": [{ "name": "where", "inputType": [{ "type": "EmailWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "EmailOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Email", "kind": "object", "isRequired": false, "isList": true } }, { "name": "phones", "args": [{ "name": "where", "inputType": [{ "type": "PhoneWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "PhoneOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Phone", "kind": "object", "isRequired": false, "isList": true } }, { "name": "depots", "args": [{ "name": "where", "inputType": [{ "type": "DepotWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "DepotOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Depot", "kind": "object", "isRequired": false, "isList": true } }, { "name": "ratings", "args": [{ "name": "where", "inputType": [{ "type": "RatingWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "RatingOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Rating", "kind": "object", "isRequired": false, "isList": true } }, { "name": "rentedTools", "args": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "RentedToolOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "RentedTool", "kind": "object", "isRequired": false, "isList": true } }] }, { "name": "AggregateUser", "fields": [{ "name": "count", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "AggregateEmail", "fields": [{ "name": "count", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "AggregatePhone", "fields": [{ "name": "count", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "AggregateRating", "fields": [{ "name": "count", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "AggregateDepot", "fields": [{ "name": "count", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "AggregateTool", "fields": [{ "name": "count", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "AggregateToolPicture", "fields": [{ "name": "count", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "AggregateRentedTool", "fields": [{ "name": "count", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "Query", "fields": [{ "name": "findManyUser", "args": [{ "name": "where", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "UserOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "User", "kind": "object", "isRequired": false, "isList": true } }, { "name": "aggregateUser", "args": [], "outputType": { "type": "AggregateUser", "kind": "object", "isRequired": true, "isList": false } }, { "name": "findOneUser", "args": [{ "name": "where", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "User", "kind": "object", "isRequired": false, "isList": false } }, { "name": "findManyEmail", "args": [{ "name": "where", "inputType": [{ "type": "EmailWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "EmailOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Email", "kind": "object", "isRequired": false, "isList": true } }, { "name": "aggregateEmail", "args": [], "outputType": { "type": "AggregateEmail", "kind": "object", "isRequired": true, "isList": false } }, { "name": "findOneEmail", "args": [{ "name": "where", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Email", "kind": "object", "isRequired": false, "isList": false } }, { "name": "findManyPhone", "args": [{ "name": "where", "inputType": [{ "type": "PhoneWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "PhoneOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Phone", "kind": "object", "isRequired": false, "isList": true } }, { "name": "aggregatePhone", "args": [], "outputType": { "type": "AggregatePhone", "kind": "object", "isRequired": true, "isList": false } }, { "name": "findOnePhone", "args": [{ "name": "where", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Phone", "kind": "object", "isRequired": false, "isList": false } }, { "name": "findManyRating", "args": [{ "name": "where", "inputType": [{ "type": "RatingWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "RatingOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Rating", "kind": "object", "isRequired": false, "isList": true } }, { "name": "aggregateRating", "args": [], "outputType": { "type": "AggregateRating", "kind": "object", "isRequired": true, "isList": false } }, { "name": "findOneRating", "args": [{ "name": "where", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Rating", "kind": "object", "isRequired": false, "isList": false } }, { "name": "findManyDepot", "args": [{ "name": "where", "inputType": [{ "type": "DepotWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "DepotOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Depot", "kind": "object", "isRequired": false, "isList": true } }, { "name": "aggregateDepot", "args": [], "outputType": { "type": "AggregateDepot", "kind": "object", "isRequired": true, "isList": false } }, { "name": "findOneDepot", "args": [{ "name": "where", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Depot", "kind": "object", "isRequired": false, "isList": false } }, { "name": "findManyTool", "args": [{ "name": "where", "inputType": [{ "type": "ToolWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "ToolOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "Tool", "kind": "object", "isRequired": false, "isList": true } }, { "name": "aggregateTool", "args": [], "outputType": { "type": "AggregateTool", "kind": "object", "isRequired": true, "isList": false } }, { "name": "findOneTool", "args": [{ "name": "where", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Tool", "kind": "object", "isRequired": false, "isList": false } }, { "name": "findManyToolPicture", "args": [{ "name": "where", "inputType": [{ "type": "ToolPictureWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "ToolPictureOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "ToolPicture", "kind": "object", "isRequired": false, "isList": true } }, { "name": "aggregateToolPicture", "args": [], "outputType": { "type": "AggregateToolPicture", "kind": "object", "isRequired": true, "isList": false } }, { "name": "findOneToolPicture", "args": [{ "name": "where", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "ToolPicture", "kind": "object", "isRequired": false, "isList": false } }, { "name": "findManyRentedTool", "args": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "orderBy", "inputType": [{ "isList": false, "isRequired": false, "type": "RentedToolOrderByInput", "kind": "object" }] }, { "name": "skip", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "after", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "before", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }], "outputType": { "type": "RentedTool", "kind": "object", "isRequired": false, "isList": true } }, { "name": "aggregateRentedTool", "args": [], "outputType": { "type": "AggregateRentedTool", "kind": "object", "isRequired": true, "isList": false } }, { "name": "findOneRentedTool", "args": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "RentedTool", "kind": "object", "isRequired": false, "isList": false } }] }, { "name": "BatchPayload", "fields": [{ "name": "count", "args": [], "outputType": { "type": "Int", "kind": "scalar", "isRequired": true, "isList": false } }] }, { "name": "Mutation", "fields": [{ "name": "createOneUser", "args": [{ "name": "data", "inputType": [{ "type": "UserCreateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "User", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteOneUser", "args": [{ "name": "where", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "User", "kind": "object", "isRequired": false, "isList": false } }, { "name": "updateOneUser", "args": [{ "name": "data", "inputType": [{ "type": "UserUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "User", "kind": "object", "isRequired": false, "isList": false } }, { "name": "upsertOneUser", "args": [{ "name": "where", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "UserCreateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "UserUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "User", "kind": "object", "isRequired": true, "isList": false } }, { "name": "updateManyUser", "args": [{ "name": "data", "inputType": [{ "type": "UserUpdateManyMutationInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteManyUser", "args": [{ "name": "where", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "createOneEmail", "args": [{ "name": "data", "inputType": [{ "type": "EmailCreateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Email", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteOneEmail", "args": [{ "name": "where", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Email", "kind": "object", "isRequired": false, "isList": false } }, { "name": "updateOneEmail", "args": [{ "name": "data", "inputType": [{ "type": "EmailUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Email", "kind": "object", "isRequired": false, "isList": false } }, { "name": "upsertOneEmail", "args": [{ "name": "where", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "EmailCreateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "EmailUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Email", "kind": "object", "isRequired": true, "isList": false } }, { "name": "updateManyEmail", "args": [{ "name": "data", "inputType": [{ "type": "EmailUpdateManyMutationInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "EmailWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteManyEmail", "args": [{ "name": "where", "inputType": [{ "type": "EmailWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "createOnePhone", "args": [{ "name": "data", "inputType": [{ "type": "PhoneCreateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Phone", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteOnePhone", "args": [{ "name": "where", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Phone", "kind": "object", "isRequired": false, "isList": false } }, { "name": "updateOnePhone", "args": [{ "name": "data", "inputType": [{ "type": "PhoneUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Phone", "kind": "object", "isRequired": false, "isList": false } }, { "name": "upsertOnePhone", "args": [{ "name": "where", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "PhoneCreateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "PhoneUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Phone", "kind": "object", "isRequired": true, "isList": false } }, { "name": "updateManyPhone", "args": [{ "name": "data", "inputType": [{ "type": "PhoneUpdateManyMutationInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "PhoneWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteManyPhone", "args": [{ "name": "where", "inputType": [{ "type": "PhoneWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "createOneRating", "args": [{ "name": "data", "inputType": [{ "type": "RatingCreateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Rating", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteOneRating", "args": [{ "name": "where", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Rating", "kind": "object", "isRequired": false, "isList": false } }, { "name": "updateOneRating", "args": [{ "name": "data", "inputType": [{ "type": "RatingUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Rating", "kind": "object", "isRequired": false, "isList": false } }, { "name": "upsertOneRating", "args": [{ "name": "where", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "RatingCreateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "RatingUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Rating", "kind": "object", "isRequired": true, "isList": false } }, { "name": "updateManyRating", "args": [{ "name": "data", "inputType": [{ "type": "RatingUpdateManyMutationInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "RatingWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteManyRating", "args": [{ "name": "where", "inputType": [{ "type": "RatingWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "createOneDepot", "args": [{ "name": "data", "inputType": [{ "type": "DepotCreateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Depot", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteOneDepot", "args": [{ "name": "where", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Depot", "kind": "object", "isRequired": false, "isList": false } }, { "name": "updateOneDepot", "args": [{ "name": "data", "inputType": [{ "type": "DepotUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Depot", "kind": "object", "isRequired": false, "isList": false } }, { "name": "upsertOneDepot", "args": [{ "name": "where", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "DepotCreateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "DepotUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Depot", "kind": "object", "isRequired": true, "isList": false } }, { "name": "updateManyDepot", "args": [{ "name": "data", "inputType": [{ "type": "DepotUpdateManyMutationInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "DepotWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteManyDepot", "args": [{ "name": "where", "inputType": [{ "type": "DepotWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "createOneTool", "args": [{ "name": "data", "inputType": [{ "type": "ToolCreateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Tool", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteOneTool", "args": [{ "name": "where", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Tool", "kind": "object", "isRequired": false, "isList": false } }, { "name": "updateOneTool", "args": [{ "name": "data", "inputType": [{ "type": "ToolUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Tool", "kind": "object", "isRequired": false, "isList": false } }, { "name": "upsertOneTool", "args": [{ "name": "where", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "ToolCreateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "ToolUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "Tool", "kind": "object", "isRequired": true, "isList": false } }, { "name": "updateManyTool", "args": [{ "name": "data", "inputType": [{ "type": "ToolUpdateManyMutationInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "ToolWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteManyTool", "args": [{ "name": "where", "inputType": [{ "type": "ToolWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "createOneToolPicture", "args": [{ "name": "data", "inputType": [{ "type": "ToolPictureCreateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "ToolPicture", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteOneToolPicture", "args": [{ "name": "where", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "ToolPicture", "kind": "object", "isRequired": false, "isList": false } }, { "name": "updateOneToolPicture", "args": [{ "name": "data", "inputType": [{ "type": "ToolPictureUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "ToolPicture", "kind": "object", "isRequired": false, "isList": false } }, { "name": "upsertOneToolPicture", "args": [{ "name": "where", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "ToolPictureCreateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "ToolPictureUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "ToolPicture", "kind": "object", "isRequired": true, "isList": false } }, { "name": "updateManyToolPicture", "args": [{ "name": "data", "inputType": [{ "type": "ToolPictureUpdateManyMutationInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "ToolPictureWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteManyToolPicture", "args": [{ "name": "where", "inputType": [{ "type": "ToolPictureWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "createOneRentedTool", "args": [{ "name": "data", "inputType": [{ "type": "RentedToolCreateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "RentedTool", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteOneRentedTool", "args": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "RentedTool", "kind": "object", "isRequired": false, "isList": false } }, { "name": "updateOneRentedTool", "args": [{ "name": "data", "inputType": [{ "type": "RentedToolUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "RentedTool", "kind": "object", "isRequired": false, "isList": false } }, { "name": "upsertOneRentedTool", "args": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "RentedToolCreateInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "RentedToolUpdateInput", "kind": "object", "isRequired": true, "isList": false }] }], "outputType": { "type": "RentedTool", "kind": "object", "isRequired": true, "isList": false } }, { "name": "updateManyRentedTool", "args": [{ "name": "data", "inputType": [{ "type": "RentedToolUpdateManyMutationInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "where", "inputType": [{ "type": "RentedToolWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }, { "name": "deleteManyRentedTool", "args": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereInput", "kind": "object", "isRequired": false, "isList": false }] }], "outputType": { "type": "BatchPayload", "kind": "object", "isRequired": true, "isList": false } }] }], "inputTypes": [{ "name": "EmailWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "address", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "purpose", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "EmailWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "EmailWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "EmailWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "owner", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": false }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "PhoneWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "num", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "purpose", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "PhoneWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "PhoneWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "PhoneWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "owner", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": false }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "ToolPictureWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "image", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "description", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "ToolPictureWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "ToolPictureWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "ToolPictureWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "tool", "inputType": [{ "type": "ToolWhereInput", "kind": "object", "isRequired": false, "isList": false }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "RentedToolWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "start_date", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }, { "type": "DateTimeFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "end_date", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }, { "type": "DateTimeFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "RentedToolWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "RentedToolWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "RentedToolWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "tool", "inputType": [{ "type": "ToolWhereInput", "kind": "object", "isRequired": false, "isList": false }], "isRelationFilter": true }, { "name": "renter", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": false }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "ToolWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "title", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "category", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "description", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "price", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Float" }, { "type": "FloatFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "pictures", "inputType": [{ "type": "ToolPictureFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "ToolWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "ToolWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "ToolWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "depot", "inputType": [{ "type": "DepotWhereInput", "kind": "object", "isRequired": false, "isList": false }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "DepotWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "address_1", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "address_2", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "city", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "state", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "zipcode", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "tools", "inputType": [{ "type": "ToolFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "DepotWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "DepotWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "DepotWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "owner", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": false }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "RatingWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "point", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Int" }, { "type": "IntFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "type", "inputType": [{ "isList": false, "isRequired": false, "kind": "enum", "type": "RatingType" }, { "type": "RatingTypeFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "comment", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "RatingWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "RatingWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "RatingWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "user", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": false }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "UserWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "password_hash", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "email", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "first_name", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "last_name", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "birth_date", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }, { "type": "DateTimeFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "emails", "inputType": [{ "type": "EmailFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "phones", "inputType": [{ "type": "PhoneFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "depots", "inputType": [{ "type": "DepotFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "ratings", "inputType": [{ "type": "RatingFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "UserWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "UserWhereUniqueInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }], "atLeastOne": true }, { "name": "EmailWhereUniqueInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }], "atLeastOne": true }, { "name": "PhoneWhereUniqueInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }], "atLeastOne": true }, { "name": "RatingWhereUniqueInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }], "atLeastOne": true }, { "name": "DepotWhereUniqueInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }], "atLeastOne": true }, { "name": "ToolWhereUniqueInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }], "atLeastOne": true }, { "name": "ToolPictureWhereUniqueInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }], "atLeastOne": true }, { "name": "RentedToolWhereUniqueInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }], "atLeastOne": true }, { "name": "EmailCreateWithoutOwnerInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "EmailCreateManyWithoutEmailsInput", "fields": [{ "name": "create", "inputType": [{ "type": "EmailCreateWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "PhoneCreateWithoutOwnerInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "num", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "PhoneCreateManyWithoutPhonesInput", "fields": [{ "name": "create", "inputType": [{ "type": "PhoneCreateWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "ToolPictureCreateWithoutToolInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "image", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "ToolPictureCreateManyWithoutPicturesInput", "fields": [{ "name": "create", "inputType": [{ "type": "ToolPictureCreateWithoutToolInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "RatingCreateWithoutUserInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "point", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "type", "inputType": [{ "type": "RatingType", "kind": "enum", "isRequired": true, "isList": false }] }, { "name": "comment", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "RatingCreateManyWithoutRatingsInput", "fields": [{ "name": "create", "inputType": [{ "type": "RatingCreateWithoutUserInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "UserCreateWithoutRentedToolsInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailCreateManyWithoutEmailsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneCreateManyWithoutPhonesInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotCreateManyWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingCreateManyWithoutRatingsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserCreateOneWithoutRenterInput", "fields": [{ "name": "create", "inputType": [{ "type": "UserCreateWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RentedToolCreateWithoutToolInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "start_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "end_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "renter", "inputType": [{ "type": "UserCreateOneWithoutRenterInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RentedToolCreateManyWithoutRentedToolsInput", "fields": [{ "name": "create", "inputType": [{ "type": "RentedToolCreateWithoutToolInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "ToolCreateWithoutDepotInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "pictures", "inputType": [{ "type": "ToolPictureCreateManyWithoutPicturesInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolCreateManyWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolCreateManyWithoutToolsInput", "fields": [{ "name": "create", "inputType": [{ "type": "ToolCreateWithoutDepotInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "DepotCreateWithoutOwnerInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_1", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "address_2", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "city", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "state", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "zipcode", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "tools", "inputType": [{ "type": "ToolCreateManyWithoutToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "DepotCreateManyWithoutDepotsInput", "fields": [{ "name": "create", "inputType": [{ "type": "DepotCreateWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "UserCreateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailCreateManyWithoutEmailsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneCreateManyWithoutPhonesInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotCreateManyWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingCreateManyWithoutRatingsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolCreateManyWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "EmailUpdateWithoutOwnerDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "EmailUpdateWithWhereUniqueWithoutOwnerInput", "fields": [{ "name": "where", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "EmailUpdateWithoutOwnerDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "EmailScalarWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "address", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "purpose", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "EmailScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "EmailScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "EmailScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "EmailUpdateManyDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "EmailUpdateManyWithWhereNestedInput", "fields": [{ "name": "where", "inputType": [{ "type": "EmailScalarWhereInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "EmailUpdateManyDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "EmailUpsertWithWhereUniqueWithoutOwnerInput", "fields": [{ "name": "where", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "EmailUpdateWithoutOwnerDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "EmailCreateWithoutOwnerInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "EmailUpdateManyWithoutOwnerInput", "fields": [{ "name": "create", "inputType": [{ "type": "EmailCreateWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "set", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "disconnect", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "delete", "inputType": [{ "type": "EmailWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "update", "inputType": [{ "type": "EmailUpdateWithWhereUniqueWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "updateMany", "inputType": [{ "type": "EmailUpdateManyWithWhereNestedInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "deleteMany", "inputType": [{ "type": "EmailScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "upsert", "inputType": [{ "type": "EmailUpsertWithWhereUniqueWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "PhoneUpdateWithoutOwnerDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "num", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "PhoneUpdateWithWhereUniqueWithoutOwnerInput", "fields": [{ "name": "where", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "PhoneUpdateWithoutOwnerDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "PhoneScalarWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "num", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "purpose", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "PhoneScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "PhoneScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "PhoneScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "PhoneUpdateManyDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "num", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "PhoneUpdateManyWithWhereNestedInput", "fields": [{ "name": "where", "inputType": [{ "type": "PhoneScalarWhereInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "PhoneUpdateManyDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "PhoneUpsertWithWhereUniqueWithoutOwnerInput", "fields": [{ "name": "where", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "PhoneUpdateWithoutOwnerDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "PhoneCreateWithoutOwnerInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "PhoneUpdateManyWithoutOwnerInput", "fields": [{ "name": "create", "inputType": [{ "type": "PhoneCreateWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "set", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "disconnect", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "delete", "inputType": [{ "type": "PhoneWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "update", "inputType": [{ "type": "PhoneUpdateWithWhereUniqueWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "updateMany", "inputType": [{ "type": "PhoneUpdateManyWithWhereNestedInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "deleteMany", "inputType": [{ "type": "PhoneScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "upsert", "inputType": [{ "type": "PhoneUpsertWithWhereUniqueWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "ToolPictureUpdateWithoutToolDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "image", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "ToolPictureUpdateWithWhereUniqueWithoutToolInput", "fields": [{ "name": "where", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "ToolPictureUpdateWithoutToolDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "ToolPictureScalarWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "image", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "description", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "ToolPictureScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "ToolPictureScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "ToolPictureScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "ToolPictureUpdateManyDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "image", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "ToolPictureUpdateManyWithWhereNestedInput", "fields": [{ "name": "where", "inputType": [{ "type": "ToolPictureScalarWhereInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "ToolPictureUpdateManyDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "ToolPictureUpsertWithWhereUniqueWithoutToolInput", "fields": [{ "name": "where", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "ToolPictureUpdateWithoutToolDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "ToolPictureCreateWithoutToolInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "ToolPictureUpdateManyWithoutToolInput", "fields": [{ "name": "create", "inputType": [{ "type": "ToolPictureCreateWithoutToolInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "set", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "disconnect", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "delete", "inputType": [{ "type": "ToolPictureWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "update", "inputType": [{ "type": "ToolPictureUpdateWithWhereUniqueWithoutToolInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "updateMany", "inputType": [{ "type": "ToolPictureUpdateManyWithWhereNestedInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "deleteMany", "inputType": [{ "type": "ToolPictureScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "upsert", "inputType": [{ "type": "ToolPictureUpsertWithWhereUniqueWithoutToolInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "RatingUpdateWithoutUserDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "point", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "type", "inputType": [{ "type": "RatingType", "kind": "enum", "isRequired": false, "isList": false }] }, { "name": "comment", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "RatingUpdateWithWhereUniqueWithoutUserInput", "fields": [{ "name": "where", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "RatingUpdateWithoutUserDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RatingScalarWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "point", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Int" }, { "type": "IntFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "type", "inputType": [{ "isList": false, "isRequired": false, "kind": "enum", "type": "RatingType" }, { "type": "RatingTypeFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "comment", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "RatingScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "RatingScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "RatingScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "RatingUpdateManyDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "point", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "type", "inputType": [{ "type": "RatingType", "kind": "enum", "isRequired": false, "isList": false }] }, { "name": "comment", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "RatingUpdateManyWithWhereNestedInput", "fields": [{ "name": "where", "inputType": [{ "type": "RatingScalarWhereInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "RatingUpdateManyDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RatingUpsertWithWhereUniqueWithoutUserInput", "fields": [{ "name": "where", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "RatingUpdateWithoutUserDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "RatingCreateWithoutUserInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RatingUpdateManyWithoutUserInput", "fields": [{ "name": "create", "inputType": [{ "type": "RatingCreateWithoutUserInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "set", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "disconnect", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "delete", "inputType": [{ "type": "RatingWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "update", "inputType": [{ "type": "RatingUpdateWithWhereUniqueWithoutUserInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "updateMany", "inputType": [{ "type": "RatingUpdateManyWithWhereNestedInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "deleteMany", "inputType": [{ "type": "RatingScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "upsert", "inputType": [{ "type": "RatingUpsertWithWhereUniqueWithoutUserInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "UserUpdateWithoutRentedToolsDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingUpdateManyWithoutUserInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserUpsertWithoutRentedToolsInput", "fields": [{ "name": "update", "inputType": [{ "type": "UserUpdateWithoutRentedToolsDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "UserCreateWithoutRentedToolsInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "UserUpdateOneRequiredWithoutRentedToolsInput", "fields": [{ "name": "create", "inputType": [{ "type": "UserCreateWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "update", "inputType": [{ "type": "UserUpdateWithoutRentedToolsDataInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "upsert", "inputType": [{ "type": "UserUpsertWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RentedToolUpdateWithoutToolDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "start_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "end_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "renter", "inputType": [{ "type": "UserUpdateOneRequiredWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RentedToolUpdateWithWhereUniqueWithoutToolInput", "fields": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "RentedToolUpdateWithoutToolDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RentedToolScalarWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "start_date", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }, { "type": "DateTimeFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "end_date", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }, { "type": "DateTimeFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "RentedToolScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "RentedToolScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "RentedToolScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "RentedToolUpdateManyDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "start_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "end_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "RentedToolUpdateManyWithWhereNestedInput", "fields": [{ "name": "where", "inputType": [{ "type": "RentedToolScalarWhereInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "RentedToolUpdateManyDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RentedToolUpsertWithWhereUniqueWithoutToolInput", "fields": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "RentedToolUpdateWithoutToolDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "RentedToolCreateWithoutToolInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RentedToolUpdateManyWithoutToolInput", "fields": [{ "name": "create", "inputType": [{ "type": "RentedToolCreateWithoutToolInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "set", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "disconnect", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "delete", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "update", "inputType": [{ "type": "RentedToolUpdateWithWhereUniqueWithoutToolInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "updateMany", "inputType": [{ "type": "RentedToolUpdateManyWithWhereNestedInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "deleteMany", "inputType": [{ "type": "RentedToolScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "upsert", "inputType": [{ "type": "RentedToolUpsertWithWhereUniqueWithoutToolInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "ToolUpdateWithoutDepotDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "pictures", "inputType": [{ "type": "ToolPictureUpdateManyWithoutToolInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolUpdateManyWithoutToolInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolUpdateWithWhereUniqueWithoutDepotInput", "fields": [{ "name": "where", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "ToolUpdateWithoutDepotDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "ToolScalarWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "title", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "category", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "description", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "price", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Float" }, { "type": "FloatFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "pictures", "inputType": [{ "type": "ToolPictureFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "ToolScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "ToolScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "ToolScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "ToolUpdateManyDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "ToolUpdateManyWithWhereNestedInput", "fields": [{ "name": "where", "inputType": [{ "type": "ToolScalarWhereInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "ToolUpdateManyDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "ToolUpsertWithWhereUniqueWithoutDepotInput", "fields": [{ "name": "where", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "ToolUpdateWithoutDepotDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "ToolCreateWithoutDepotInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "ToolUpdateManyWithoutDepotInput", "fields": [{ "name": "create", "inputType": [{ "type": "ToolCreateWithoutDepotInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "set", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "disconnect", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "delete", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "update", "inputType": [{ "type": "ToolUpdateWithWhereUniqueWithoutDepotInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "updateMany", "inputType": [{ "type": "ToolUpdateManyWithWhereNestedInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "deleteMany", "inputType": [{ "type": "ToolScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "upsert", "inputType": [{ "type": "ToolUpsertWithWhereUniqueWithoutDepotInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "DepotUpdateWithoutOwnerDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_1", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_2", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "city", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "state", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "zipcode", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "tools", "inputType": [{ "type": "ToolUpdateManyWithoutDepotInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "DepotUpdateWithWhereUniqueWithoutOwnerInput", "fields": [{ "name": "where", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "DepotUpdateWithoutOwnerDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "DepotScalarWhereInput", "fields": [{ "name": "id", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "address_1", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "address_2", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "NullableStringFilter", "isList": false, "isRequired": false, "kind": "object" }, { "type": "null", "isList": false, "isRequired": false, "kind": "scalar" }], "isRelationFilter": false }, { "name": "city", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "state", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "zipcode", "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "type": "StringFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "tools", "inputType": [{ "type": "ToolFilter", "isList": false, "isRequired": false, "kind": "object" }], "isRelationFilter": false }, { "name": "AND", "inputType": [{ "type": "DepotScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "OR", "inputType": [{ "type": "DepotScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }, { "name": "NOT", "inputType": [{ "type": "DepotScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }], "isRelationFilter": true }], "isWhereType": true, "atLeastOne": false }, { "name": "DepotUpdateManyDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_1", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_2", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "city", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "state", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "zipcode", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "DepotUpdateManyWithWhereNestedInput", "fields": [{ "name": "where", "inputType": [{ "type": "DepotScalarWhereInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "DepotUpdateManyDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "DepotUpsertWithWhereUniqueWithoutOwnerInput", "fields": [{ "name": "where", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "DepotUpdateWithoutOwnerDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "DepotCreateWithoutOwnerInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "DepotUpdateManyWithoutOwnerInput", "fields": [{ "name": "create", "inputType": [{ "type": "DepotCreateWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "set", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "disconnect", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "delete", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "update", "inputType": [{ "type": "DepotUpdateWithWhereUniqueWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "updateMany", "inputType": [{ "type": "DepotUpdateManyWithWhereNestedInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "deleteMany", "inputType": [{ "type": "DepotScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "upsert", "inputType": [{ "type": "DepotUpsertWithWhereUniqueWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "UserCreateWithoutDepotsInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailCreateManyWithoutEmailsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneCreateManyWithoutPhonesInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingCreateManyWithoutRatingsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolCreateManyWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserCreateOneWithoutOwnerInput", "fields": [{ "name": "create", "inputType": [{ "type": "UserCreateWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "DepotCreateWithoutToolsInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_1", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "address_2", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "city", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "state", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "zipcode", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "owner", "inputType": [{ "type": "UserCreateOneWithoutOwnerInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "DepotCreateOneWithoutDepotInput", "fields": [{ "name": "create", "inputType": [{ "type": "DepotCreateWithoutToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolCreateWithoutRentedToolsInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "depot", "inputType": [{ "type": "DepotCreateOneWithoutDepotInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "pictures", "inputType": [{ "type": "ToolPictureCreateManyWithoutPicturesInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolCreateOneWithoutToolInput", "fields": [{ "name": "create", "inputType": [{ "type": "ToolCreateWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RentedToolCreateWithoutRenterInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "start_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "end_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "tool", "inputType": [{ "type": "ToolCreateOneWithoutToolInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "UserUpdateWithoutDepotsDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingUpdateManyWithoutUserInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolUpdateManyWithoutRenterInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserUpsertWithoutDepotsInput", "fields": [{ "name": "update", "inputType": [{ "type": "UserUpdateWithoutDepotsDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "UserCreateWithoutDepotsInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "UserUpdateOneRequiredWithoutDepotsInput", "fields": [{ "name": "create", "inputType": [{ "type": "UserCreateWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "update", "inputType": [{ "type": "UserUpdateWithoutDepotsDataInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "upsert", "inputType": [{ "type": "UserUpsertWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "DepotUpdateWithoutToolsDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_1", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_2", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "city", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "state", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "zipcode", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "owner", "inputType": [{ "type": "UserUpdateOneRequiredWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "DepotUpsertWithoutToolsInput", "fields": [{ "name": "update", "inputType": [{ "type": "DepotUpdateWithoutToolsDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "DepotCreateWithoutToolsInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "DepotUpdateOneRequiredWithoutToolsInput", "fields": [{ "name": "create", "inputType": [{ "type": "DepotCreateWithoutToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "DepotWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "update", "inputType": [{ "type": "DepotUpdateWithoutToolsDataInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "upsert", "inputType": [{ "type": "DepotUpsertWithoutToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolUpdateWithoutRentedToolsDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "depot", "inputType": [{ "type": "DepotUpdateOneRequiredWithoutToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "pictures", "inputType": [{ "type": "ToolPictureUpdateManyWithoutToolInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolUpsertWithoutRentedToolsInput", "fields": [{ "name": "update", "inputType": [{ "type": "ToolUpdateWithoutRentedToolsDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "ToolCreateWithoutRentedToolsInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "ToolUpdateOneRequiredWithoutRentedToolsInput", "fields": [{ "name": "create", "inputType": [{ "type": "ToolCreateWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "update", "inputType": [{ "type": "ToolUpdateWithoutRentedToolsDataInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "upsert", "inputType": [{ "type": "ToolUpsertWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RentedToolUpdateWithoutRenterDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "start_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "end_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "tool", "inputType": [{ "type": "ToolUpdateOneRequiredWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RentedToolUpdateWithWhereUniqueWithoutRenterInput", "fields": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "data", "inputType": [{ "type": "RentedToolUpdateWithoutRenterDataInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RentedToolUpsertWithWhereUniqueWithoutRenterInput", "fields": [{ "name": "where", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "update", "inputType": [{ "type": "RentedToolUpdateWithoutRenterDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "RentedToolCreateWithoutRenterInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RentedToolUpdateManyWithoutRenterInput", "fields": [{ "name": "create", "inputType": [{ "type": "RentedToolCreateWithoutRenterInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "connect", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "set", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "disconnect", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "delete", "inputType": [{ "type": "RentedToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "update", "inputType": [{ "type": "RentedToolUpdateWithWhereUniqueWithoutRenterInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "updateMany", "inputType": [{ "type": "RentedToolUpdateManyWithWhereNestedInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "deleteMany", "inputType": [{ "type": "RentedToolScalarWhereInput", "kind": "object", "isRequired": false, "isList": true }] }, { "name": "upsert", "inputType": [{ "type": "RentedToolUpsertWithWhereUniqueWithoutRenterInput", "kind": "object", "isRequired": false, "isList": true }] }] }, { "name": "UserUpdateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingUpdateManyWithoutUserInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolUpdateManyWithoutRenterInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserUpdateManyMutationInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "EmailCreateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "owner", "inputType": [{ "type": "UserCreateOneWithoutOwnerInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "UserCreateWithoutEmailsInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneCreateManyWithoutPhonesInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotCreateManyWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingCreateManyWithoutRatingsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolCreateManyWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserUpdateWithoutEmailsDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingUpdateManyWithoutUserInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolUpdateManyWithoutRenterInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserUpsertWithoutEmailsInput", "fields": [{ "name": "update", "inputType": [{ "type": "UserUpdateWithoutEmailsDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "UserCreateWithoutEmailsInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "UserUpdateOneRequiredWithoutEmailsInput", "fields": [{ "name": "create", "inputType": [{ "type": "UserCreateWithoutEmailsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "update", "inputType": [{ "type": "UserUpdateWithoutEmailsDataInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "upsert", "inputType": [{ "type": "UserUpsertWithoutEmailsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "EmailUpdateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "owner", "inputType": [{ "type": "UserUpdateOneRequiredWithoutEmailsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "EmailUpdateManyMutationInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "PhoneCreateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "num", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "owner", "inputType": [{ "type": "UserCreateOneWithoutOwnerInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "UserCreateWithoutPhonesInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailCreateManyWithoutEmailsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotCreateManyWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingCreateManyWithoutRatingsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolCreateManyWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserUpdateWithoutPhonesDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "ratings", "inputType": [{ "type": "RatingUpdateManyWithoutUserInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolUpdateManyWithoutRenterInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserUpsertWithoutPhonesInput", "fields": [{ "name": "update", "inputType": [{ "type": "UserUpdateWithoutPhonesDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "UserCreateWithoutPhonesInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "UserUpdateOneRequiredWithoutPhonesInput", "fields": [{ "name": "create", "inputType": [{ "type": "UserCreateWithoutPhonesInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "update", "inputType": [{ "type": "UserUpdateWithoutPhonesDataInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "upsert", "inputType": [{ "type": "UserUpsertWithoutPhonesInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "PhoneUpdateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "num", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "owner", "inputType": [{ "type": "UserUpdateOneRequiredWithoutPhonesInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "PhoneUpdateManyMutationInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "num", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "purpose", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "UserCreateWithoutRatingsInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailCreateManyWithoutEmailsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneCreateManyWithoutPhonesInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotCreateManyWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolCreateManyWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserCreateOneWithoutUserInput", "fields": [{ "name": "create", "inputType": [{ "type": "UserCreateWithoutRatingsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RatingCreateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "point", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "type", "inputType": [{ "type": "RatingType", "kind": "enum", "isRequired": true, "isList": false }] }, { "name": "comment", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "user", "inputType": [{ "type": "UserCreateOneWithoutUserInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "UserUpdateWithoutRatingsDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "password_hash", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "email", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "first_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "last_name", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "birth_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "emails", "inputType": [{ "type": "EmailUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "phones", "inputType": [{ "type": "PhoneUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "depots", "inputType": [{ "type": "DepotUpdateManyWithoutOwnerInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolUpdateManyWithoutRenterInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "UserUpsertWithoutRatingsInput", "fields": [{ "name": "update", "inputType": [{ "type": "UserUpdateWithoutRatingsDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "UserCreateWithoutRatingsInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "UserUpdateOneRequiredWithoutRatingsInput", "fields": [{ "name": "create", "inputType": [{ "type": "UserCreateWithoutRatingsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "UserWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "update", "inputType": [{ "type": "UserUpdateWithoutRatingsDataInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "upsert", "inputType": [{ "type": "UserUpsertWithoutRatingsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RatingUpdateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "point", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "type", "inputType": [{ "type": "RatingType", "kind": "enum", "isRequired": false, "isList": false }] }, { "name": "comment", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "user", "inputType": [{ "type": "UserUpdateOneRequiredWithoutRatingsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RatingUpdateManyMutationInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "point", "inputType": [{ "type": "Int", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "type", "inputType": [{ "type": "RatingType", "kind": "enum", "isRequired": false, "isList": false }] }, { "name": "comment", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "DepotCreateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_1", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "address_2", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "city", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "state", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "zipcode", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "owner", "inputType": [{ "type": "UserCreateOneWithoutOwnerInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "tools", "inputType": [{ "type": "ToolCreateManyWithoutToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "DepotUpdateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_1", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_2", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "city", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "state", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "zipcode", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "owner", "inputType": [{ "type": "UserUpdateOneRequiredWithoutDepotsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "tools", "inputType": [{ "type": "ToolUpdateManyWithoutDepotInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "DepotUpdateManyMutationInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_1", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "address_2", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "city", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "state", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "zipcode", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "ToolCreateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "depot", "inputType": [{ "type": "DepotCreateOneWithoutDepotInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "pictures", "inputType": [{ "type": "ToolPictureCreateManyWithoutPicturesInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolCreateManyWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolUpdateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "depot", "inputType": [{ "type": "DepotUpdateOneRequiredWithoutToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "pictures", "inputType": [{ "type": "ToolPictureUpdateManyWithoutToolInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolUpdateManyWithoutToolInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolUpdateManyMutationInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "ToolPictureCreateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "image", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "tool", "inputType": [{ "type": "ToolCreateOneWithoutToolInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "ToolCreateWithoutPicturesInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "depot", "inputType": [{ "type": "DepotCreateOneWithoutDepotInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolCreateManyWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolUpdateWithoutPicturesDataInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "title", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "category", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "price", "inputType": [{ "type": "Float", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "depot", "inputType": [{ "type": "DepotUpdateOneRequiredWithoutToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "rentedTools", "inputType": [{ "type": "RentedToolUpdateManyWithoutToolInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolUpsertWithoutPicturesInput", "fields": [{ "name": "update", "inputType": [{ "type": "ToolUpdateWithoutPicturesDataInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "create", "inputType": [{ "type": "ToolCreateWithoutPicturesInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "ToolUpdateOneRequiredWithoutPicturesInput", "fields": [{ "name": "create", "inputType": [{ "type": "ToolCreateWithoutPicturesInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "connect", "inputType": [{ "type": "ToolWhereUniqueInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "update", "inputType": [{ "type": "ToolUpdateWithoutPicturesDataInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "upsert", "inputType": [{ "type": "ToolUpsertWithoutPicturesInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolPictureUpdateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "image", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "tool", "inputType": [{ "type": "ToolUpdateOneRequiredWithoutPicturesInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "ToolPictureUpdateManyMutationInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "image", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "description", "inputType": [{ "type": "String", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "RentedToolCreateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "start_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "end_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": true, "isList": false }] }, { "name": "tool", "inputType": [{ "type": "ToolCreateOneWithoutToolInput", "kind": "object", "isRequired": true, "isList": false }] }, { "name": "renter", "inputType": [{ "type": "UserCreateOneWithoutRenterInput", "kind": "object", "isRequired": true, "isList": false }] }] }, { "name": "RentedToolUpdateInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "start_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "end_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "tool", "inputType": [{ "type": "ToolUpdateOneRequiredWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }, { "name": "renter", "inputType": [{ "type": "UserUpdateOneRequiredWithoutRentedToolsInput", "kind": "object", "isRequired": false, "isList": false }] }] }, { "name": "RentedToolUpdateManyMutationInput", "fields": [{ "name": "id", "inputType": [{ "type": "ID", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "start_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }, { "name": "end_date", "inputType": [{ "type": "DateTime", "kind": "scalar", "isRequired": false, "isList": false }] }] }, { "name": "StringFilter", "fields": [{ "name": "equals", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "not", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "isList": false, "isRequired": false, "kind": "scalar", "type": "StringFilter" }] }, { "name": "in", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "notIn", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "lt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "lte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "gt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "gte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "contains", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "startsWith", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "endsWith", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }], "atLeastOne": false }, { "name": "NullableStringFilter", "fields": [{ "name": "equals", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "isList": false, "isRequired": false, "kind": "scalar", "type": "null" }] }, { "name": "not", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }, { "isList": false, "isRequired": false, "kind": "scalar", "type": "null" }, { "isList": false, "isRequired": false, "kind": "scalar", "type": "NullableStringFilter" }] }, { "name": "in", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "notIn", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "lt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "lte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "gt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "gte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "contains", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "startsWith", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }, { "name": "endsWith", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "String" }] }], "atLeastOne": false }, { "name": "DateTimeFilter", "fields": [{ "name": "equals", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }] }, { "name": "not", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }, { "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTimeFilter" }] }, { "name": "in", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "DateTime" }] }, { "name": "notIn", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "DateTime" }] }, { "name": "lt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }] }, { "name": "lte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }] }, { "name": "gt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }] }, { "name": "gte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "DateTime" }] }], "atLeastOne": false }, { "name": "FloatFilter", "fields": [{ "name": "equals", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Float" }] }, { "name": "not", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Float" }, { "isList": false, "isRequired": false, "kind": "scalar", "type": "FloatFilter" }] }, { "name": "in", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "Float" }] }, { "name": "notIn", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "Float" }] }, { "name": "lt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Float" }] }, { "name": "lte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Float" }] }, { "name": "gt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Float" }] }, { "name": "gte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Float" }] }], "atLeastOne": false }, { "name": "ToolPictureFilter", "fields": [{ "name": "every", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "ToolPictureWhereInput" }] }, { "name": "some", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "ToolPictureWhereInput" }] }, { "name": "none", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "ToolPictureWhereInput" }] }], "atLeastOne": false }, { "name": "RentedToolFilter", "fields": [{ "name": "every", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "RentedToolWhereInput" }] }, { "name": "some", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "RentedToolWhereInput" }] }, { "name": "none", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "RentedToolWhereInput" }] }], "atLeastOne": false }, { "name": "ToolFilter", "fields": [{ "name": "every", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "ToolWhereInput" }] }, { "name": "some", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "ToolWhereInput" }] }, { "name": "none", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "ToolWhereInput" }] }], "atLeastOne": false }, { "name": "IntFilter", "fields": [{ "name": "equals", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Int" }] }, { "name": "not", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Int" }, { "isList": false, "isRequired": false, "kind": "scalar", "type": "IntFilter" }] }, { "name": "in", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "Int" }] }, { "name": "notIn", "isRelationFilter": false, "inputType": [{ "isList": true, "isRequired": false, "kind": "scalar", "type": "Int" }] }, { "name": "lt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Int" }] }, { "name": "lte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Int" }] }, { "name": "gt", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Int" }] }, { "name": "gte", "isRelationFilter": false, "inputType": [{ "isList": false, "isRequired": false, "kind": "scalar", "type": "Int" }] }], "atLeastOne": false }, { "name": "RatingTypeFilter", "fields": [], "atLeastOne": false }, { "name": "EmailFilter", "fields": [{ "name": "every", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "EmailWhereInput" }] }, { "name": "some", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "EmailWhereInput" }] }, { "name": "none", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "EmailWhereInput" }] }], "atLeastOne": false }, { "name": "PhoneFilter", "fields": [{ "name": "every", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "PhoneWhereInput" }] }, { "name": "some", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "PhoneWhereInput" }] }, { "name": "none", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "PhoneWhereInput" }] }], "atLeastOne": false }, { "name": "DepotFilter", "fields": [{ "name": "every", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "DepotWhereInput" }] }, { "name": "some", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "DepotWhereInput" }] }, { "name": "none", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "DepotWhereInput" }] }], "atLeastOne": false }, { "name": "RatingFilter", "fields": [{ "name": "every", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "RatingWhereInput" }] }, { "name": "some", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "RatingWhereInput" }] }, { "name": "none", "isRelationFilter": true, "inputType": [{ "isList": false, "isRequired": false, "kind": "object", "type": "RatingWhereInput" }] }], "atLeastOne": false }, { "name": "UserOrderByInput", "atLeastOne": true, "atMostOne": true, "isOrderType": true, "fields": [{ "name": "id", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "password_hash", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "email", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "first_name", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "last_name", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "birth_date", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }] }, { "name": "EmailOrderByInput", "atLeastOne": true, "atMostOne": true, "isOrderType": true, "fields": [{ "name": "id", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "address", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "purpose", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }] }, { "name": "PhoneOrderByInput", "atLeastOne": true, "atMostOne": true, "isOrderType": true, "fields": [{ "name": "id", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "num", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "purpose", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }] }, { "name": "DepotOrderByInput", "atLeastOne": true, "atMostOne": true, "isOrderType": true, "fields": [{ "name": "id", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "address_1", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "address_2", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "city", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "state", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "zipcode", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }] }, { "name": "ToolOrderByInput", "atLeastOne": true, "atMostOne": true, "isOrderType": true, "fields": [{ "name": "id", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "title", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "category", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "description", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "price", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }] }, { "name": "ToolPictureOrderByInput", "atLeastOne": true, "atMostOne": true, "isOrderType": true, "fields": [{ "name": "id", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "image", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "description", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }] }, { "name": "RentedToolOrderByInput", "atLeastOne": true, "atMostOne": true, "isOrderType": true, "fields": [{ "name": "id", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "start_date", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "end_date", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }] }, { "name": "RatingOrderByInput", "atLeastOne": true, "atMostOne": true, "isOrderType": true, "fields": [{ "name": "id", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "point", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "type", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }, { "name": "comment", "inputType": [{ "type": "OrderByArg", "isList": false, "isRequired": false, "kind": "enum" }], "isRelationFilter": false }] }] } };
